class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans=new ListNode(0); //Creating ans node...
        ListNode* dk = ans;  //Creating node which will point to start of the ans node...
        int carry=0; 
        while(l1 || l2){
            if(l1==NULL){  //if l1 is null then we will add l2->val and carry...
                int k = l2->val + carry;
                if(k>=10){
                    carry=k/10;
                }
                else{
                    carry=0;
                }
                k=k%10;
                ans->next=new ListNode(k);
                l2=l2->next;
            }
            else if(l2==NULL){   //if l2 is null then we will add l1->val and carry
                int k = l1->val + carry;
                if(k>=10){
                    carry=k/10;
                }
                else{
                    carry=0;
                }
                k=k%10;
                ans->next=new ListNode(k);
                l1=l1->next;
            }
            else{
                int k = l1->val + l2->val + carry;
                if(k>=10){
                    carry=k/10;
                }
                else{
                    carry=0;
                }
                k=k%10;
                ans->next=new ListNode(k); 
                l1=l1->next;
                l2=l2->next;
            }
            ans=ans->next;
        }
        if(carry>0){ //if carry is not zero...
            ans->next=new ListNode(carry);
        }
        return dk->next; // here dk is pointing to the head node of ans and that value is 0 so returning node dk->next...
    }
};
